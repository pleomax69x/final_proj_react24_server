{
  "openapi": "3.0.1",
  "info": {
    "version": "1.0.0",
    "title": "Swagger test",
    "description": "Showing off swagger-ui-express",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "servers": [
    { "url": "https://planning-app1.herokuapp.com/" },
    { "url": "http://localhost:5000/" }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Authorization endpoints"
    },
    {
      "name": "Projects",
      "description": "Projects endpoints"
    },
    {
      "name": "Sprints",
      "description": "Sprints endpoints"
    },
    {
      "name": "Tasks",
      "description": "Tasks endpoints"
    }
  ],
  "paths": {
    "/registration": {
      "post": {
        "tags": ["Auth"],
        "summary": "User registration",
        "parameters": [],
        "security": [],
        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (Invalid request body)",
            "content": {}
          },
          "409": {
            "description": "Conflict (Email is in use)",
            "content": {}
          }
        }
      }
    },
    "/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "User login",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Login's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (Invalid request body)",
            "content": {}
          },
          "401": {
            "description": "Unauthorized (Email or password is wrong)",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          }
        }
      }
    },
    "/logout": {
      "post": {
        "tags": ["Auth"],
        "summary": "User logout , send none content!",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "responses": {
          "204": {
            "description": "Successful logout (No content)"
          },
          "401": {
            "description": "Unauthorized (Not authorized)",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          }
        }
      }
    },
    "/projects": {
      "post": {
        "tags": ["Projects"],
        "summary": "Create project",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Project object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Projects"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {}
          },
          "400": {
            "description": "Bad request (Validation Error)",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          }
        }
      },
      "get": {
        "tags": ["Projects"],
        "summary": "Get all projects in which the user is a teammate",
        "parameters": [
          {
          "name": "sortBy",
          "in": "query",
          "description": "Sorting. First created project will shown first",
          "example": "name",
          "schema": {
            "type": "string"
          }
          
          },
          {
          "name": "sortByDesc",
          "in": "query",
          "description": "Sorting. Last created project will shown first",
          "example": "createdAt",
          "schema": {
            "type": "string"
          }
        },
         {
          "name": "filter",
          "in": "query",
          "description": "Filter. Choose only fields you need",
          "example": "name|description",
          "schema": {
            "type": "string"
          }
          
        }],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Success",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          }
        }
      }
    },
    "/projects/{projectId}": {
      "delete": {
        "tags": ["Projects"],
        "summary": "Delete project",
        "parameters": [
        {
          "name": "projectId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Success",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden (Permission error)",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          }
        }
      },
      "patch": {
        "tags": ["Projects"],
        "summary": "Update project name",
        "parameters": [
        {
          "name": "projectId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
        ],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Project object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectName"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {}
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden (Permission error)",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          }
        }
      }
    },
    "/projects/{projectId}/sprints": {
      "post": {
        "tags": ["Sprints"],
        "summary": "Create sprint",
        "parameters": [
          {
          "name": "projectId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Sprint object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Sprints"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {}
          },
          "400": {
            "description": "Bad request (Validation Error)",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          },
          "500": {
            "description": "Internal server error",
            "content": {}
          }
        }
      },
      "get": {
        "tags": ["Sprints"],
        "summary": "Get all sprints",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }],
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Success",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          }
        }
      },
      "delete": {
        "tags": ["Sprints"],
        "summary": "Delete sprint",
        "parameters": [
        {
          "name": "projectId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }],
        "requestBody": {
          "description": "Sprint object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SprintDelete"
              }
            }
          }
        },
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Success (Sprint was deleted)",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden (Permission error)",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          }
        }
      }
    },
    "/projects/{projectId}/sprints/{sprintId}": {
      "patch": {
        "tags": ["Sprints"],
        "summary": "Update sprint",
        "parameters": [
        {
          "name": "projectId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "sprintId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
        ],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Sprint object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SprintTitle"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {}
          },
          "400": {
            "description": "Bad request",
            "content": {}
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          },
          "403": {
            "description": "Forbidden (Permission error)",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "RegistrationRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "minLength": 5,
            "maxLength": 30,
            "description": "User email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "minLength": 3,
            "maxLength": 30,
            "format": "A-Za-z0-9",
            "description": "User password. Special characters are not allowed!"
          }
        },
        "example": { "email": "yourmail@gmail.com", "password": "qweWerty" }
      },
      "RegistrationResponse": {
        "type": "object",
        "example": {
          "status": "Created",
          "code": 201,
          "data": {
            "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYwZGMzNTJlM2E4ZTc0MDAxYzdkMDVmMyIsImlhdCI6MTYyNTA0NDI3MCwiZXhwIjoxNjI1MTMwNjcwfQ.AKHW4VtuVt9ibrMNXLrS32j2hjrTcwF2l60jNFOuOYA",
            "user": {
              "email": "yourmail@gmail.com",
              "_id": "60dc352e3a8e74001c7d05f3"
            }
          }
        }
      },
      "LoginRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "minLength": 5,
            "maxLength": 30,
            "description": "User email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "minLength": 3,
            "maxLength": 30,
            "format": "A-Za-z0-9",
            "description": "User password. Special characters are not allowed!"
          }
        },
        "example": {"email": "yourmail@gmail.com", "password": "qweWerty"}
      },
      "LoginResponse": {
        "type": "object",
        "example": {
          "status": "success",
          "code": 200,
          "data": {
            "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYwZGMzNTJlM2E4ZTc0MDAxYzdkMDVmMyIsImlhdCI6MTYyNTA0NDI3MCwiZXhwIjoxNjI1MTMwNjcwfQ.AKHW4VtuVt9ibrMNXLrS32j2hjrTcwF2l60jNFOuOYA",
            "user": {
              "email": "yourmail@gmail.com",
              "_id": "60dc352e3a8e74001c7d05f3"
            }
          }
        }
      },
      "Projects": {
        "type": "object",
        "required": ["name", "description"],
        "properties": {
          "name": {
            "type": "string",
            "description": "Project name",
            "minLength": 3,
            "maxLength": 30
          },
          "description": {
            "type": "string",
            "description": "Project description",
            "minLength": 5,
            "maxLength": 100
          },
          "owner": {
            "type": "string",
            "format": "ObjectId",
            "description": "Ref to user (Owner of the project)"
          },
          "createdAt": {
            "type": "string",
            "format": "ISODate",
            "description": "When project was created"
          },
          "updatedAt": {
            "type": "string",
            "format": "ISODate",
            "description": "When project was updated"
          }
        },
        "example": { "name": "Project1", "description": "description" }
      },
      "ProjectName": {
        "type": "object",
        "required": ["name"],
        "properties": {
          "name": {
            "type": "string",
            "description": "Project name",
            "minLength": 3,
            "maxLength": 30
          }
        },
        "example": { "name": "Renamed project" }
      },
      "Sprints": {
        "type": "object",
        "required": ["title", "date", "duration"],
        "properties": {
          "title": {
            "type": "string",
            "description": "Sprint title"
          },
          "date": {
            "type": "string",
            "description": "Sprint start date"
          },
          "duration": {
            "type": "number",
            "description": "Duration of the sprint"
          },
          "projectId": {
            "type": "string",
            "format": "ObjectId",
            "description": "Ref to project"
          },
          "createdAt": {
            "type": "string",
            "format": "ISODate",
            "description": "When sprint was created"
          },
          "updatedAt": {
            "type": "string",
            "format": "ISODate",
            "description": "When sprint was updated"
          }
        },
        "example": { "title": "Sprint1", "date": "2021-06-30", "duration": "10" }
      },
      "SprintDelete": {
        "type": "object",
        "required": ["id"],
        "properties": {
          "id": {
            "type": "string",
            "description": "Sprint id"
          }
        },
        "example": { "id": "60dcbc0ecd8638001c283ac2" }
      },
      "SprintTitle": {
        "type": "object",
        "required": ["title"],
        "properties": {
          "title": {
            "type": "string",
            "description": "Sprint title"
          }
        },
        "example": { "title": "Renamed sprint" }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
